name: CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  GO_VERSION: '1.23'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.semver.outputs.version_tag }}
      version: ${{ steps.semver.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Semver
      uses: paulhatch/semantic-version@v5.4.0
      with:
        bump_each_commit: true
        tag_prefix: "v"
        format: "v${major}.${minor}.${patch}"
        major_pattern: "BREAKING CHANGE:"
        minor_pattern: "feat:"
        version_from_branch: false
        change_path: "."
        namespace: ""
      id: semver

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: task deps

    - name: Run tests
      run: task test

    - name: Build
      run: task build

    - name: Lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        verify: false  # Disable schema validation for custom linters
        args: --timeout=30m

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Tag Repo
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: ${{ needs.test.outputs.version_tag }}

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v6.4.0
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}